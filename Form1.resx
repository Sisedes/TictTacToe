<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBwAAAEAIACYDgAAFgAAACgAAAAgAAAAOAAAAAEAIAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZCwAAmQcAAJkAAACZAAAA
        mQAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAmQEAAJkEAACZAAAAmQAAAJkBAACZAAAAmQAAAJkAAACZAAAA
        mQIAAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJk6AACZHgAA
        mRUAAJk1AACZHwAAmQEAAJkAAACZAAAAAAAAAJkAAACZMgAAmYgAAJkvAACZkgAAmacAAJmFAACZRAAA
        mQsAAJknAACZIwAAmQAAAAAAAAAAAAAAmQAAAJkAAACZAAAAAAAAAAAAAACZAAAAmQAAAJkAAAAAAAAA
        mWAAAJlPAACZvQAAmeMAAJnVAACZkgAAmSUAAJkAAAAAAAAAmQAAAJl/AACZygAAmaYAAJnhAACZoAAA
        mbQAAJnWAACZtQAAmVsAAJkJAACZAAAAAAAAAAAAAACZAgAAmREAAJkAAACZAAAAmQAAAJkAAACZEAAA
        mQ8AAJkAAACZeQAAmbQAAJncAACZQwAAmVAAAJmnAACZwwAAmS4AAAAAAACZBQAAmbUAAJm3AACZ0AAA
        mZIAAJkAAACZGAAAmZMAAJnWAACZcgAAmQAAAAAAAAAAAAAAAAAAAJkEAACZZwAAmWsAAJkVAACZCQAA
        mVYAAJmeAACZKQAAmQAAAJmLAACZzAAAmc8AAJkQAACZAAAAmQYAAJmKAACZfwAAAAAAAJkWAACZ2AAA
        mZIAAJnIAACZnAAAmSgAAJmUAACZVAAAmXAAAJmOAAAAAAAAAAAAAAAAAAAAAAAAmQAAAJkYAACZmgAA
        mcAAAJmyAACZ3AAAmUwAAJkAAACZAQAAmZUAAJmNAACZ7QAAmY0AAJkaAACZBQAAmWsAAJlxAAAAAAAA
        mSwAAJnrAACZYwAAmZAAAJnlAACZtQAAmU0AAJkrAACZpAAAmTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        mQAAAJkmAACZ4QAAmf0AAJnqAACZigAAmToAAJkLAACZoAAAmVEAAJl3AACZ7AAAmdYAAJm5AACZxgAA
        mS0AAAAAAACZRAAAmfAAAJlJAACZewAAmfwAAJnhAACZlQAAmakAAJk4AACZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACZAAAAmXAAAJnpAACZYQAAmYgAAJndAACZ6wAAmYgAAJmoAACZVgAAmQMAAJlCAACZiwAA
        maoAAJldAACZBQAAmQAAAJlYAACZ8gAAma8AAJmxAACZXQAAmZ4AAJm2AACZZAAAmQAAAJkAAACZAAAA
        mQAAAJkAAAAAAAAAmQAAAJkAAACZPAAAmU4AAJkAAACZAAAAmR0AAJlUAACZSQAAma0AAJlgAACZAAAA
        mQAAAJkAAACZAwAAmQAAAJkFAACZCQAAmXEAAJn+AACZygAAmUIAAJkiAACZLgAAmTkAAJk4AACZPwAA
        mUMAAJlGAACZRAAAmTEAAJkAAACZAQAAmQQAAJkGAACZDAAAmRgAAJkiAACZLAAAmTcAAJlJAACZygAA
        macAAJl0AACZgwAAmZEAAJmeAACZqwAAmbQAAJm/AACZ4QAAmf8AAJnrAACZ4AAAmeYAAJnqAACZ7AAA
        me0AAJntAACZ6gAAmeQAAJnYAACZpgAAmQAAAJkeAACZUwAAmXAAAJmEAACZkwAAmaEAAJmpAACZrQAA
        mbMAAJnsAACZ0QAAma0AAJmnAACZogAAmZ8AAJmcAACZ2QAAmfsAAJnnAACZ5QAAmX0AAJlsAACZYQAA
        mVkAAJlUAACZSwAAmUIAAJk3AACZLAAAmSAAAJkRAACZGgAAmS4AAJkLAACZCgAAmQoAAJkpAACZcgAA
        mRYAAJkIAACZEwAAmckAAJlsAACZDwAAmVMAAJlcAACZKgAAmW0AAJncAACZdAAAmZEAAJnIAACZBwAA
        mSEAAJlZAACZOAAAmQMAAJkAAACZAAAAmQAAAJkAAACZAAAAmQAAAJkWAACZiwAAmYcAAJkvAACZSwAA
        mb4AAJlvAACZAgAAmQAAAJkRAACZ0AAAmWoAAJmEAACZ6AAAmeEAAJnnAACZ8QAAmWwAAJkCAACZiQAA
        mcAAAJkRAACZswAAmeQAAJnPAACZogAAmSYAAJkAAAAAAAAAAAAAAAAAAAAAAAAAmQAAAJkXAACZkwAA
        meQAAJn0AACZtQAAmRQAAJkAAACZAAAAmRgAAJnYAACZcwAAmcgAAJm7AACZwQAAmeAAAJnNAACZmgAA
        mRAAAJmIAACZuQAAmQwAAJmxAACZywAAmUIAAJl1AACZoQAAmSEAAAAAAAAAAAAAAAAAAAAAAACZAAAA
        mQAAAJlqAACZ9QAAmdIAAJnpAACZuQAAmVcAAJkMAACZHgAAmd8AAJlkAACZqQAAmfsAAJnXAACZNwAA
        mRgAAJmmAACZZQAAmYMAAJmzAACZAQAAmT8AAJnhAACZyQAAmWwAAJmQAACZXAAAAAAAAAAAAAAAAAAA
        AAAAAJkAAACZBQAAmaIAAJmbAACZGAAAmVYAAJm9AACZ7QAAmYkAAJkpAACZ5AAAmacAAJnaAACZ8AAA
        meUAAJmNAACZVAAAmXUAAJlnAACZfAAAma0AAJkCAACZAAAAmT4AAJm1AACZ4wAAmdEAAJk7AACZAAAA
        AAAAAAAAAAAAAAAAmQAAAJkEAACZIgAAmR0AAJkQAACZEAAAmSEAAJlgAACZXQAAmUAAAJnuAACZ/QAA
        mbIAAJlQAACZoAAAmdkAAJnRAACZpQAAmSUAAJl8AACZqgAAmQgAAJkFAACZAgAAmQwAAJkjAACZGgAA
        mQAAAJkAAACZAAAAmQAAAJkAAACZAQAAmXAAAJnBAACZywAAmc4AAJnRAACZ0wAAmdEAAJnQAACZ3AAA
        mf0AAJn/AACZ3wAAmc8AAJnRAACZ2wAAmeAAAJnhAACZxAAAmd8AAJnnAACZtgAAma0AAJmoAACZoAAA
        mZYAAJmQAACZewAAmWsAAJlbAACZRwAAmRoAAJkBAACZNwAAmWgAAJmJAACZuQAAmbkAAJmZAACZpgAA
        mfoAAJn/AACZ+wAAmaEAAJl9AACZfAAAmXcAAJl4AACZfQAAmW0AAJlqAACZoAAAmb4AAJmAAACZrAAA
        mXAAAJlVAACZswAAmZYAAJk/AACZOAAAmSsAAJkYAACZBQAAmQAAAJkAAACZFwAAmbIAAJnfAACZ1AAA
        mccAAJnOAACZ3AAAmZwAAJnvAACZPgAAmRcAAJkDAACZJAAAmYcAAJlAAACZAAAAmQAAAJlUAACZkwAA
        mQ0AAJluAACZuwAAmbMAAJmyAACZEwAAmQAAAJkAAACZAAAAmQAAAJkAAAAAAAAAAAAAAJlmAACZ6gAA
        mUoAAJlyAACZ9gAAmeYAAJk+AACZUAAAme4AAJk3AACZYQAAmaoAAJnVAACZjQAAmQYAAJkAAAAAAAAA
        mUkAAJmMAACZAAAAmQ4AAJm8AACZ/wAAmcgAAJk2AACZAAAAmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        mXcAAJnhAACZdAAAmeIAAJnsAACZpAAAmQAAAJlZAACZ6wAAmS0AAJlfAACZ+QAAmfYAAJnCAACZWgAA
        mQ0AAAAAAACZOwAAmX8AAJkDAACZfwAAmesAAJl3AACZxAAAmeEAAJldAACZBQAAAAAAAAAAAAAAAAAA
        AAAAAJkAAACZRQAAmfIAAJn4AACZuAAAmaAAAJlCAACZAAAAmV8AAJnkAACZVgAAmeEAAJmqAACZTgAA
        mbUAAJnuAACZbwAAAAAAAJkuAACZagAAmTgAAJntAACZigAAmQIAAJkhAACZqQAAmesAAJlJAAAAAAAA
        AAAAAAAAAACZAAAAmQEAAJlgAACZ9QAAmf0AAJncAACZmAAAmQQAAAAAAACZYQAAmdsAAJlRAACZlQAA
        mSAAAJkAAACZDAAAmUkAAJkqAAAAAAAAmR8AAJlOAACZZQAAmb0AAJkaAACZAAAAmQAAAJkNAACZVwAA
        mSQAAAAAAAAAAAAAAAAAAJkAAACZSQAAmecAAJmgAACZYQAAmYIAAJlEAACZAQAAAAAAAJlcAACZxwAA
        mQ8AAJkBAACZAAAAmQAAAJkAAACZAAAAmQAAAAAAAACZCgAAmRwAAJkMAACZFAAAmQAAAAAAAACZAAAA
        mQAAAJkAAACZAAAAAAAAAAAAAAAAAAAAmSUAAJnRAACZpwAAmREAAJkAAACZAAAAmQAAAJkAAAAAAAAA
        mR0AAJlAAACZAgAAmQAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkAAACZAAAAmQAAAJkAAACZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZkwAAmcQAAJkbAACZAAAAmQAAAJkAAACZAAAA
        AAAAAAAAAACZAAAAmQAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQAAAJkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmBAACZRwAAmQAAAJkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/P83v/wPAD/8BwA55A
        IIeAQiAHwIAgB+AAIA/gACAf5g6AAIAAAACAAAAAAAAAPwCAAB+BgAAPwAAAD4AAAg+AAAAfAAAAAAAA
        AADAAGAfwABkH8CAIAfAgCAHgIIgx4CH4f8Pj///H////z////8=
</value>
  </data>
</root>